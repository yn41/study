{"version":3,"sources":["logo.svg","components/ViewerTemplate/ViewerTemplate.js","components/SpaceNavi/SpaceNavi.js","components/Viewer/Viewer.js","lib/api.js","App.js","serviceWorker.js","index.js","components/ViewerTemplate/ViewerTemplate.module.scss","components/SpaceNavi/SpaceNavi.module.scss","components/Viewer/Viewer.module.scss"],"names":["module","exports","__webpack_require__","p","cx","classNames","bind","styles","ViewerTemplate","_ref","viewer","spaceNavi","react_default","a","createElement","Fragment","className","SpaceNavi","onPrev","onNext","io","size","onClick","Viewer","url","mediaType","loading","src","width","height","data","getAPOD","date","axios","get","App","state","maxDate","_callee","targetDate","response","_response$data","_date","regenerator_default","wrap","_context","prev","next","_this","abrupt","setState","api","sent","console","log","media_type","t0","stop","this","handlePrev","prevDate","moment","subtract","format","handleNext","nextDate","add","alert","_this$state","components_ViewerTemplate_ViewerTemplate","components_Viewer_Viewer","components_SpaceNavi_SpaceNavi","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","header","container","btn_arr","img","vidio"],"mappings":"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","file":"static/js/main.2d4a46b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport classNames from \"classnames/bind\"; \r\nimport styles from \"./ViewerTemplate.module.scss\"\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst ViewerTemplate = ({viewer, spaceNavi}) => {\r\n    return (\r\n        <>\r\n            <header className={cx('header')}>\r\n                <h1>Nasa 오늘의 사진~!</h1>\r\n            </header>\r\n            <div className={cx('container')}>\r\n                {viewer}\r\n                {spaceNavi}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewerTemplate;","import React from 'react';\r\nimport classNames from \"classnames/bind\"; \r\nimport styles from \"./SpaceNavi.module.scss\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst SpaceNavi = ({onPrev, onNext}) => {\r\n    return (\r\n        <>\r\n            <IoIosArrowBack size={\"2rem\"} className={cx('btn_arr','prev')} onClick={onPrev}/>\r\n            <IoIosArrowForward size={\"2rem\"} className={cx('btn_arr','next')} onClick={onNext} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpaceNavi;","import React from 'react';\r\nimport classNames from \"classnames/bind\"; \r\nimport styles from \"./Viewer.module.scss\"\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Viewer = ({url, mediaType, loading}) => {\r\n    return (\r\n        <>  \r\n        {\r\n            !loading?  \r\n                (mediaType===\"image\"?  \r\n                <img src={url} className={cx(\"img\",\"text\")} />\r\n                : <object width=\"90%\" height=\"90%\" data={url} className={cx(\"vidio\")}></object>)\r\n            :<div className={cx(\"loading\")}><p>loading...</p><p>겁나 느림... 계속 기달리세요...</p> </div>\r\n        }\r\n        {\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Viewer;","import axios from 'axios';\r\n\r\nexport function getAPOD(date){\r\n    return axios.get('https://api.nasa.gov/planetary/apod?api_key=0UWaUkE6mXVAklUTt1WvVVSq3i6LOdrYfKh4Ukmq&date='+date);\r\n};","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './scss/reset.scss';\nimport ViewerTemplate from \"./components/ViewerTemplate\";\nimport SpaceNavi from \"./components/SpaceNavi\";\nimport Viewer from \"./components/Viewer\";\nimport moment from 'moment';\n\nimport * as api from './lib/api'\n\nclass App extends Component {\n  state ={\n    loading: false,\n    maxDate:null,\n    date: null,\n    url:null,\n    mediaType:null\n  }\n  getAPOD = async (date) =>{\n    const targetDate = date;\n    if(this.state.loading) return;// loading true이면 이미 요청 중!\n    this.setState({\n      loading:true\n    });\n    try {\n      //api 연결 시작!\n      const response = await api.getAPOD(targetDate); \n      console.log(response);\n      //비구조 할당 + 새로운 이름\n      const {date: date, url, media_type:mediaType} = response.data; // date, url, media_type => api 받아오는 값 \n      // console.log(date, url, mediaType);\n\n      // maxDate가 없으면 지금 받은 값으로 지정\n      if(!this.maxDate){\n          this.setState({\n            maxDate:date\n          });\n      }\n      \n      this.setState({ //이름이 같으면 자동으로 들어감\n        date,\n        mediaType,\n        url\n      });\n      console.log(this.state);\n\n    } catch (e) {\n      //에러 시\n      console.log(e);\n    }\n    \n    //api 연결 종료!\n    this.setState({\n      loading:false\n    });\n  }\n  componentDidMount(){\n    const date = moment().format('YYYY-MM-DD');\n    this.getAPOD(date);\n  }\n  handlePrev = ()=>{\n    const {date} = this.state;\n    const prevDate = moment(date).subtract(1, 'days').format('YYYY-MM-DD');\n    console.log(prevDate);\n    this.getAPOD(prevDate);\n\n  }\n  handleNext =()=>{\n    const {date} = this.state;\n    const nextDate = moment(date).add(1, 'days').format('YYYY-MM-DD');\n    if(nextDate === moment().add(1, 'days').format('YYYY-MM-DD')){\n      alert(\"내일 사진은 미리 볼 수 없습니다!!\\n내일 확인해주세요!!\");\n      return;\n    }\n    this.getAPOD(nextDate);\n  }\n  render() {\n    const {url, mediaType, loading} = this.state;\n    const {handlePrev, handleNext} = this;\n    return (\n      <> \n        {/* div 대신 Fragment, <></> 쓰면 클릭 이벤트시 오류 */}\n        <ViewerTemplate\n          viewer={<Viewer \n            url={url}\n            mediaType={mediaType}\n            loading={loading}\n          />} \n          spaceNavi={<SpaceNavi onPrev={handlePrev} onNext={handleNext}/>}/>\n      </>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ViewerTemplate_header__3N1Xk\",\"container\":\"ViewerTemplate_container__1yOfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_arr\":\"SpaceNavi_btn_arr__3kS4j\",\"next\":\"SpaceNavi_next__3R56o\",\"prev\":\"SpaceNavi_prev__jb6kW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Viewer_img__3sfwm\",\"vidio\":\"Viewer_vidio__1R1Af\",\"loading\":\"Viewer_loading__3uPg_\"};"],"sourceRoot":""}